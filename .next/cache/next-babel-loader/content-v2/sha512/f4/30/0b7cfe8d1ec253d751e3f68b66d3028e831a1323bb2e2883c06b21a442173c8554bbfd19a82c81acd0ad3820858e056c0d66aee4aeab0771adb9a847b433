{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// import { MongoClient, ObjectId } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: props.meetupData.title\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      })]\n    }), /*#__PURE__*/_jsx(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    })]\n  });\n}\n\nexport async function getStaticPaths() {\n  //   const client = await MongoClient.connect(\n  //     \"mongodb+srv://damilola94:damilola94@cluster0.ncmszgu.mongodb.net/meetup?retryWrites=true&w=majority\"\n  //   );\n  //   const db = client.db();\n  //   const meetupCollection = db.collection(\"meetup\");\n  //   const meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\n  //   client.close();\n  return {\n    fallback: false,\n    paths: // meetups.map((meetup) => ({\n    //   params: {\n    //     meetupId: meetup._id.toString(),\n    //   },\n    // })),\n    [{\n      params: {\n        meetupId: \"m1\"\n      }\n    }, {\n      params: {\n        meetupId: \"m2\"\n      }\n    }]\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId; //   const client = await MongoClient.connect(\n  //     \"mongodb+srv://damilola94:damilola94@cluster0.ncmszgu.mongodb.net/meetup?retryWrites=true&w=majority\"\n  //   );\n  //   const db = client.db();\n  //   const meetupCollection = db.collection(\"meetup\");\n  //   const selectedMeetup = await meetupCollection.findOne({\n  //     _id: ObjectId(meetupId),\n  //   });\n  //   client.close();\n  //   console.log(meetupId);\n\n  return {\n    props: {\n      //   meetupData: {\n      //     id: selectedMeetup._id,\n      //     title: selectedMeetup.title,\n      //     address: selectedMeetup.address,\n      //     image: selectedMeetup.image,\n      //     description: selectedMeetup.description,\n      //   },\n      meetupData: {\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTXM9hUg7cC4iBVD-y5i-DgY5ulIDALSdfjUTizXC1MlkwyZiUBUxbpwmCkTvfmNkI8i9w&usqp=CAU\",\n        id: meetupId,\n        title: \"A First Meetup\",\n        address: \"Some Street 5, Some City\",\n        description: \"The meetup descriptiom\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":null,"metadata":{},"sourceType":"module"}