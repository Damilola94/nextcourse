{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Bigger Project\\\\pages\\\\index.js\";\n// import { MongoClient } from \"mongodb\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTXM9hUg7cC4iBVD-y5i-DgY5ulIDALSdfjUTizXC1MlkwyZiUBUxbpwmCkTvfmNkI8i9w&usqp=CAU\",\n  address: \"Some address 10, 12345 Some City\",\n  description: \"This is a first meetup\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTXM9hUg7cC4iBVD-y5i-DgY5ulIDALSdfjUTizXC1MlkwyZiUBUxbpwmCkTvfmNkI8i9w&usqp=CAU\",\n  address: \"Some address 50, 12345 Some City\",\n  description: \"This is a second meetup\"\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of highly \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n} // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  //   const client = await MongoClient.connect(\n  //     \"mongodb+srv://damilola94:damilola94@cluster0.ncmszgu.mongodb.net/meetup?retryWrites=true&w=majority\"\n  //   );\n  //   const db = client.db();\n  //   const meetupCollection = db.collection(\"meetup\");\n  //   const meetups = await meetupCollection.find().toArray();\n  //   client.close();\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS //m   eetups: meetups.map((meetup) => ({\n      //     title: meetup.title,\n      //     address: meetup.address,\n      //     image: meetup.image,\n      //     id: meetup._id.toString(),\n      //   })),\n\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/USER/Desktop/Bigger Project/pages/index.js"],"names":["Head","Fragment","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","revalidate"],"mappings":";;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,sIAJJ;AAKEC,EAAAA,OAAO,EAAE,kCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,sIAJJ;AAKEC,EAAAA,OAAO,EAAE,kCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,CAAtB;;AAmBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,C,CAED;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA,SAAO;AACLF,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAER,aADJ,CAEL;AACA;AACA;AACA;AACA;AACA;;AAPK,KADF;AAULU,IAAAA,UAAU,EAAE;AAVP,GAAP;AAYD;AAED,eAAeJ,QAAf","sourcesContent":["// import { MongoClient } from \"mongodb\";\r\nimport Head from \"next/head\";\r\nimport { Fragment } from \"react\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst DUMMY_MEETUPS = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"A First Meetup\",\r\n    image:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTXM9hUg7cC4iBVD-y5i-DgY5ulIDALSdfjUTizXC1MlkwyZiUBUxbpwmCkTvfmNkI8i9w&usqp=CAU\",\r\n    address: \"Some address 10, 12345 Some City\",\r\n    description: \"This is a first meetup\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    title: \"A Second Meetup\",\r\n    image:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTXM9hUg7cC4iBVD-y5i-DgY5ulIDALSdfjUTizXC1MlkwyZiUBUxbpwmCkTvfmNkI8i9w&usqp=CAU\",\r\n    address: \"Some address 50, 12345 Some City\",\r\n    description: \"This is a second meetup\",\r\n  },\r\n];\r\n\r\nfunction HomePage(props) {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>React Meetups</title>\r\n        <meta name=\"description\" content=\"Browse a huge list of highly \" />\r\n      </Head>\r\n      <MeetupList meetups={props.meetups} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n\r\n//   // fetch data from an API\r\n\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS,\r\n//     },\r\n//   };\r\n// }\r\n\r\nexport async function getStaticProps() {\r\n  // fetch data from an API\r\n\r\n  //   const client = await MongoClient.connect(\r\n  //     \"mongodb+srv://damilola94:damilola94@cluster0.ncmszgu.mongodb.net/meetup?retryWrites=true&w=majority\"\r\n  //   );\r\n\r\n  //   const db = client.db();\r\n\r\n  //   const meetupCollection = db.collection(\"meetup\");\r\n\r\n  //   const meetups = await meetupCollection.find().toArray();\r\n\r\n  //   client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetups: DUMMY_MEETUPS,\r\n      //m   eetups: meetups.map((meetup) => ({\r\n      //     title: meetup.title,\r\n      //     address: meetup.address,\r\n      //     image: meetup.image,\r\n      //     id: meetup._id.toString(),\r\n      //   })),\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}